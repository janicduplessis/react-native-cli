{"version":3,"sources":["../../../src/tools/config/schema.ts"],"names":["map","key","value","t","object","unknown","pattern","command","name","string","required","description","usage","func","options","array","items","parse","default","alternatives","try","bool","number","allow","rename","ignoreUndefined","examples","desc","cmd","healthCheck","label","healthchecks","isRequired","getDiagnostics","win32AutomaticFix","darwinAutomaticFix","linuxAutomaticFix","runAutomaticFix","dependencyConfig","dependency","platforms","any","keys","ios","project","podspecPath","sharedLibraries","libraryFolder","scriptPhases","android","sourceDir","manifestPath","packageImportPath","packageInstance","assets","hooks","params","type","message","npmPackageName","optional","projectConfig","linkConfig","commands","healthChecks","dependencies","root","folder","pbxprojPath","podfile","projectPath","projectName","reactNativePath","packageName","packageFolder","mainFilePath","stringsPath","settingsGradlePath","assetsPath","buildGradlePath","appName"],"mappings":"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","sourcesContent":["import t, {SchemaLike} from 'joi';\n\nconst map = (key: RegExp | SchemaLike, value: SchemaLike) =>\n  t.object().unknown(true).pattern(key, value);\n\n/**\n * Schema for CommandT\n */\nconst command = t.object({\n  name: t.string().required(),\n  description: t.string(),\n  usage: t.string(),\n  func: t.func().required(),\n  options: t.array().items(\n    t\n      .object({\n        name: t.string().required(),\n        description: t.string(),\n        parse: t.func(),\n        default: t\n          .alternatives()\n          .try(t.bool(), t.number(), t.string().allow(''), t.func()),\n      })\n      .rename('command', 'name', {ignoreUndefined: true}),\n  ),\n  examples: t.array().items(\n    t.object({\n      desc: t.string().required(),\n      cmd: t.string().required(),\n    }),\n  ),\n});\n\n/**\n * Schema for HealthChecksT\n */\nconst healthCheck = t.object({\n  label: t.string().required(),\n  healthchecks: t.array().items(\n    t.object({\n      label: t.string().required(),\n      isRequired: t.string(),\n      description: t.string(),\n      getDiagnostics: t.func(),\n      win32AutomaticFix: t.func(),\n      darwinAutomaticFix: t.func(),\n      linuxAutomaticFix: t.func(),\n      runAutomaticFix: t.func().required(),\n    }),\n  ),\n});\n\n/**\n * Schema for UserDependencyConfigT\n */\nexport const dependencyConfig = t\n  .object({\n    dependency: t\n      .object({\n        platforms: map(t.string(), t.any())\n          .keys({\n            ios: t\n              .object({\n                project: t.string(),\n                podspecPath: t.string(),\n                sharedLibraries: t.array().items(t.string()),\n                libraryFolder: t.string(),\n                scriptPhases: t.array().items(t.object()),\n              })\n              .default({}),\n            android: t\n              .object({\n                sourceDir: t.string(),\n                manifestPath: t.string(),\n                packageImportPath: t.string(),\n                packageInstance: t.string(),\n              })\n              .default({}),\n          })\n          .default(),\n        assets: t.array().items(t.string()).default([]),\n        hooks: map(t.string(), t.string()).default({}),\n        params: t\n          .array()\n          .items(\n            t.object({\n              name: t.string(),\n              type: t.string(),\n              message: t.string(),\n            }),\n          )\n          .default([]),\n      })\n      .default(),\n    platforms: map(\n      t.string(),\n      t.object({\n        npmPackageName: t.string().optional(),\n        dependencyConfig: t.func(),\n        projectConfig: t.func(),\n        linkConfig: t.func(),\n      }),\n    ).default({}),\n    commands: t.array().items(command).default([]),\n    healthChecks: t.array().items(healthCheck).default([]),\n  })\n  .unknown(true)\n  .default();\n\n/**\n * Schema for ProjectConfigT\n */\nexport const projectConfig = t\n  .object({\n    dependencies: map(\n      t.string(),\n      t\n        .object({\n          root: t.string(),\n          platforms: map(t.string(), t.any()).keys({\n            ios: t\n              .object({\n                sourceDir: t.string(),\n                folder: t.string(),\n                pbxprojPath: t.string(),\n                podfile: t.string(),\n                podspecPath: t.string(),\n                projectPath: t.string(),\n                projectName: t.string(),\n                libraryFolder: t.string(),\n                sharedLibraries: t.array().items(t.string()),\n              })\n              .allow(null),\n            android: t\n              .object({\n                sourceDir: t.string(),\n                folder: t.string(),\n                packageImportPath: t.string(),\n                packageInstance: t.string(),\n              })\n              .allow(null),\n          }),\n          assets: t.array().items(t.string()),\n          hooks: map(t.string(), t.string()),\n          params: t.array().items(\n            t.object({\n              name: t.string(),\n              type: t.string(),\n              message: t.string(),\n            }),\n          ),\n        })\n        .allow(null),\n    ).default({}),\n    reactNativePath: t.string(),\n    project: map(t.string(), t.any())\n      .keys({\n        ios: t\n          .object({\n            project: t.string(),\n            sharedLibraries: t.array().items(t.string()),\n            libraryFolder: t.string(),\n          })\n          .default({}),\n        android: t\n          .object({\n            sourceDir: t.string(),\n            manifestPath: t.string(),\n            packageName: t.string(),\n            packageFolder: t.string(),\n            mainFilePath: t.string(),\n            stringsPath: t.string(),\n            settingsGradlePath: t.string(),\n            assetsPath: t.string(),\n            buildGradlePath: t.string(),\n            appName: t.string(),\n          })\n          .default({}),\n      })\n      .default(),\n    assets: t.array().items(t.string()).default([]),\n    commands: t.array().items(command).default([]),\n    platforms: map(\n      t.string(),\n      t.object({\n        npmPackageName: t.string().optional(),\n        dependencyConfig: t.func(),\n        projectConfig: t.func(),\n        linkConfig: t.func(),\n      }),\n    ).default({}),\n  })\n  .unknown(true)\n  .default();\n"]}